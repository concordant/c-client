image: gradle:latest

cache: &global_cache
  # per-branch cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .gradle/
  # make push explicit
  policy: pull

build:
  stage: build
  script:
    - gradle assemble --build-cache
  artifacts:
    paths:
      - build/
  cache:
    <<: *global_cache
    policy: pull-push

test:
  stage: test
  # node 15+ has bug #2143 : https://github.com/npm/cli/issues/2143
  image: node:14.16.0
  variables:
    COUCHDB_HOST: couchdb
    COUCHDB_PORT: 5984
    COUCHDB_URL: http://$COUCHDB_HOST:$COUCHDB_PORT/
    COUCHDB_USER: admin
    COUCHDB_PASSWORD: "admin"

  services:
    - couchdb:latest

  before_script:
    # Gradle in APT repository is outdated:
    #   install dependencies and download Gradle 6.8.3
    - apt-get update &&
      apt-get install -y default-jdk-headless
    - wget -q "https://services.gradle.org/distributions/gradle-6.8.3-bin.zip"
    - unzip -q gradle-6.8.3-bin.zip
    - PATH=$(readlink -e gradle-6.8.3/bin):$PATH
    # setup couchdb
    - curl -su "$COUCHDB_USER:$COUCHDB_PASSWORD"
      -X PUT $COUCHDB_URL/_users
    # install c-service
    - npm config set @concordant:registry "https://gitlab.inria.fr/api/v4/packages/npm/"
    - npm config set '//gitlab.inria.fr/api/v4/packages/npm/:_authToken' "${CI_JOB_TOKEN}"
    # install in foreground, run in background
    - npm install @concordant/c-service
    - npx @concordant/c-service &

  script:
    - gradle check
  artifacts:
    paths:
      - build/reports/
    when: always

deliver-internal:
  stage: deploy
  when: manual
  # use only artifacts from build job
  dependencies:
    - build
  script:
    - gradle publishAllPublicationsToGitlabRepository
             publishNodeJsNpmPublicationToGitlab

# Expected environment variables (required to publish)
# - OSSRH_USERNAME, OSSRH_TOKEN: MavenCentral credentials
# - GPG_SECRET_KEY: ASCII-armored GPG private signing key
# - GPG_KEY_ID: 8-characters GPG key ID
# - GPG_PASSPHRASE: GPG key passphrase
# - NPMJS_AUTH_TOKEN: NPMjs credentials
publish:
  stage: deploy
  rules:
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual
  # use only artifacts from build job
  dependencies:
    - build
  script:
    - gradle publishAllPublicationsToMavenCentralRepository
             publishNodeJsNpmPublicationToNpmjs

pages:
  stage: deploy
  script:
    - gradle dokkaHtml
    - mv build/dokka/html public
  artifacts:
    paths:
      - public
  only:
    - master
  # do not download artifacts from other jobs
  dependencies: []
